---
title: "Homework #5: SVM and Calibration" 
author: "**Your Name Here**"
format: ds6030hw-html
---

```{r config, include=FALSE}
# Set global configurations and settings here
knitr::opts_chunk$set()                 # set global chunk options
ggplot2::theme_set(ggplot2::theme_bw()) # set ggplot2 theme
```

# Required R packages and Directories {.unnumbered .unlisted}

```{r packages, message=FALSE, warning=FALSE}
dir_data= 'https://mdporter.github.io/DS6030/data/' # data directory
library(tidyverse)  # functions for data manipulation  
```


# COMPAS Recidivism Prediction

A recidivism risk model called COMPAS was the topic of a [ProPublica article](https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing/) on ML bias. Because the data and notebooks used for article was released on [github](https://github.com/propublica/compas-analysis), we can also evaluate the prediction bias (i.e., calibration). 

This code will read in the *violent crime* risk score and apply the filtering used in the [analysis](https://github.com/propublica/compas-analysis/blob/master/Compas%20Analysis.ipynb).
```{r, message=FALSE}
#| code-fold: true
library(tidyverse)
df = read_csv("https://raw.githubusercontent.com/propublica/compas-analysis/master/compas-scores-two-years-violent.csv")

risk = df %>% 
  filter(days_b_screening_arrest <= 30) %>%
  filter(days_b_screening_arrest >= -30) %>% 
  filter(is_recid != -1) %>%
  filter(c_charge_degree != "O") %>%
  filter(v_score_text != 'N/A') %>% 
  transmute(
    age, age_cat,
    charge = ifelse(c_charge_degree == "F", "Felony", "Misdemeanor"),
    race,
    sex,                 
    priors_count = priors_count...15,
    score = v_decile_score,              # the risk score {1,2,...,10}
    outcome = two_year_recid...53        # outcome {1 = two year recidivate}
  )
```

The `risk` data frame has the relevant information for completing the problems.



# Problem 1: COMPAS risk score


## a. Risk Score and Probability (table)

Assess the predictive bias in the COMPAS risk scores by evaluating the probability of recidivism, e.g. estimate $\Pr(Y = 1 \mid \text{Score}=x)$. Use any reasonable techniques (including Bayesian) to estimate the probability of recidivism for each risk score. 

Specifically, create a table (e.g., data frame) that provides the following information:

- The COMPASS risk score.
- The point estimate of the probability of recidivism for each risk score.
- 95% confidence or credible intervals for the probability (e.g., Using normal theory, bootstrap, or Bayesian techniques).

Indicate the choices you made in estimation (e.g., state the prior if you used Bayesian methods).

::: {.callout-note title="Solution"}
```{r}
set.seed(6896)
test = sample(nrow(risk), size=750)
train = -test
```

```{r}
#: fit logistic regression model on training data
fit_lr = glm(outcome~., family='binomial', data = risk[train,])
```

```{r}
tbl_lr = risk[test,] %>%
  mutate(g = factor(outcome, c(0,1)),
         p_hat = predict(fit_lr, ., type="response"))
```

```{r}
tbl_score = tbl_lr %>%
  group_by(score) %>%
  summarize(n = n(), lower = min(p_hat), upper = max(p_hat),
            p_hat = mean(p_hat), n_y = sum(outcome),
            # bayesian (uniform prior)
            p_y = (n_y+1) / (n+2), # posterior mean 
            beta_lower = qbeta(.025, n_y+1, n-n_y+1), 
            beta_upper = qbeta(.975, n_y+1, n-n_y+1)) 
```

```{r}
tbl_score %>%
  select(score,p_y,beta_lower,beta_upper)
```

Since the data is binary, I was aiming for a beta prior distribution. I hope I did it right :)
:::

## b. Risk Score and Probability (plot)

Make a plot of the risk scores and corresponding estimated probability of recidivism. 

- Put the risk score on the x-axis and estimate probability of recidivism on y-axis.
- Add the 95% confidence or credible intervals calculated in part a.
- Comment on the patterns you see. 

::: {.callout-note title="Solution"}
```{r}
tbl_score %>%
  ggplot(aes(x=score, y=p_y, ymin=beta_lower, ymax=beta_upper))+
  geom_pointrange(color="darkblue", size=0.1)+
  geom_point(color="darkblue", size=2)+
  labs(x = "Risk Score", y = "Estimated Probability")
```
Based on this graph, it seems like those with a higher "risk" score (I'm guessing it's a score related to how likely the person is to commit another crime?) have a higher probability to actually commit another crime. 
:::

## c. Risk Score and Probability (by race)

Repeat the analysis, but this time do so for every race. Produce a set of plots (one per race) and comment on the patterns. 

::: {.callout-note title="Solution"}
```{r}
tbl_race = tbl_lr %>%
  group_by(score, race) %>%
  summarize(n = n(), lower = min(p_hat), upper = max(p_hat),
            p_hat = mean(p_hat), n_y = sum(outcome),
            # bayesian (uniform prior)
            p_y = (n_y+1) / (n+2), # posterior mean 
            beta_lower = qbeta(.025, n_y+1, n-n_y+1), 
            beta_upper = qbeta(.975, n_y+1, n-n_y+1)) 
```

```{r}
tbl_race %>%
  select(score, race, p_y, beta_lower, beta_upper)
```

```{r}
tbl_race %>%
  ggplot(aes(x=score, y=p_y, ymin=beta_lower, ymax=beta_upper))+
  geom_pointrange(color="darkblue", size=0.1)+
  geom_point(color="darkblue", size=2)+
  labs(x = "Risk Score", y = "Estimated Probability")+
  facet_wrap(~race)
```

It looks like that regardless of race, the risk score is positively correlated with commiting another crime (or is it the same crime? idk).
:::

## d. ROC Curves

Use the raw COMPAS risk scores to make a ROC curve for each race. 

- Are the best discriminating models the ones you expected? 
- Are the ROC curves helpful in evaluating the COMPAS risk score? 

::: {.callout-note title="Solution"}
```{r}
library(yardstick)
tbl_lr %>% group_by(race) %>%
  roc_curve(truth = g, p_hat, event_level="second") %>%
  autoplot()+
  scale_color_brewer(type = "qual")
```

Overall, the ROC curves seem to give a good idea on the quality of the COMPAS risk score. I would say that since the ROC curve varies for each race, the risk score isn't that great. Obviously, it does fairly well in some areas, but because the performance varies, it should be used with caution. 

I think I'm not surprised about which models did the best in terms of the ROC curve.
:::

# Problem 2: Support Vector Machines (SVM). 

Focus on Problem 1, we won't have an SVM problem this week.
